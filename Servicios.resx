<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>